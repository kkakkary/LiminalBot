{"version":3,"sources":["../../../../src/lib/structures/PieceLocation.ts"],"names":["VirtualPath","relative","sep","basename"],"mappings":";;;;;;;;;AAMO,IAAM,cAAA,GAAN,MAAM,cAAc,CAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAenB,WAAA,CAAY,MAAc,IAAc,EAAA;AAX/C;AAAA;AAAA;AAAA,IAAgB,aAAA,CAAA,IAAA,EAAA,MAAA,CAAA;AAKhB;AAAA;AAAA;AAAA,IAAgB,aAAA,CAAA,IAAA,EAAA,MAAA,CAAA;AAOf,IAAA,IAAA,CAAK,IAAO,GAAA,IAAA;AACZ,IAAA,IAAA,CAAK,IAAO,GAAA,IAAA;AAAA;AACb;AAAA;AAAA;AAAA,EAKA,IAAW,OAAU,GAAA;AACpB,IAAA,OAAO,KAAK,IAAS,KAAAA,yBAAA;AAAA;AACtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAeA,IAAW,QAAmB,GAAA;AAC7B,IAAA,OAAO,KAAK,OAAU,GAAAA,yBAAA,GAAcC,cAAS,IAAK,CAAA,IAAA,EAAM,KAAK,IAAI,CAAA;AAAA;AAClE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAeA,IAAW,WAAwB,GAAA;AAClC,IAAO,OAAA,IAAA,CAAK,OAAU,GAAA,EAAK,GAAA,IAAA,CAAK,QAAS,CAAA,KAAA,CAAMC,QAAG,CAAA,CAAE,KAAM,CAAA,CAAA,EAAG,EAAE,CAAA;AAAA;AAChE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAeA,IAAW,IAAe,GAAA;AACzB,IAAA,OAAO,IAAK,CAAA,OAAA,GAAUF,yBAAc,GAAAG,aAAA,CAAS,KAAK,IAAI,CAAA;AAAA;AACvD;AAAA;AAAA;AAAA,EAKO,MAA4B,GAAA;AAClC,IAAO,OAAA;AAAA,MACN,aAAa,IAAK,CAAA,WAAA;AAAA,MAClB,MAAM,IAAK,CAAA,IAAA;AAAA,MACX,MAAM,IAAK,CAAA,IAAA;AAAA,MACX,UAAU,IAAK,CAAA,QAAA;AAAA,MACf,MAAM,IAAK,CAAA;AAAA,KACZ;AAAA;AAEF,CAAA;AA1F2B,MAAA,CAAA,cAAA,EAAA,eAAA,CAAA;AAApB,IAAM,aAAN,GAAA","file":"PieceLocation.cjs","sourcesContent":["import { basename, relative, sep } from 'path';\nimport { VirtualPath } from '../internal/constants';\n\n/**\n * The metadata class used for {@link Piece}s.\n */\nexport class PieceLocation {\n\t/**\n\t * The full path to the file.\n\t */\n\tpublic readonly full: string;\n\n\t/**\n\t * The root directory the file was found from.\n\t */\n\tpublic readonly root: string;\n\n\t/**\n\t * @param full The full path to the file.\n\t * @param root The root directory the file was found from.\n\t */\n\tpublic constructor(full: string, root: string) {\n\t\tthis.full = full;\n\t\tthis.root = root;\n\t}\n\n\t/**\n\t * Whether the file is virtual or not.\n\t */\n\tpublic get virtual() {\n\t\treturn this.full === VirtualPath;\n\t}\n\n\t/**\n\t * The relative path between {@link PieceLocation.root} and {@link PieceLocation.full}.\n\t * @example\n\t * ```typescript\n\t * const location = new PieceLocation(\n\t * \t'/usr/src/app/commands',\n\t * \t'/usr/src/app/commands/general/ping.js'\n\t * );\n\t *\n\t * console.log(location.relative);\n\t * // → 'general/ping.js'\n\t * ```\n\t */\n\tpublic get relative(): string {\n\t\treturn this.virtual ? VirtualPath : relative(this.root, this.full);\n\t}\n\n\t/**\n\t * The names of the directories that separate {@link PieceLocation.root} and {@link PieceLocation.full}.\n\t * @example\n\t * ```typescript\n\t * const location = new PieceLocation(\n\t * \t'/usr/src/app/commands',\n\t * \t'/usr/src/app/commands/games/multiplayer/connect-four.js'\n\t * );\n\t *\n\t * console.log(location.directories);\n\t * // → ['games', 'multiplayer']\n\t * ```\n\t */\n\tpublic get directories(): string[] {\n\t\treturn this.virtual ? [] : this.relative.split(sep).slice(0, -1);\n\t}\n\n\t/**\n\t * The name and extension of the file that was loaded, extracted from {@link PieceLocation.full}.\n\t * @example\n\t * ```typescript\n\t * const location = new PieceLocation(\n\t * \t'/usr/src/app/commands',\n\t * \t'/usr/src/app/commands/games/multiplayer/connect-four.js'\n\t * );\n\t *\n\t * console.log(location.name);\n\t * // → 'connect-four.js'\n\t * ```\n\t */\n\tpublic get name(): string {\n\t\treturn this.virtual ? VirtualPath : basename(this.full);\n\t}\n\n\t/**\n\t * Defines the `JSON.stringify` behavior of this structure.\n\t */\n\tpublic toJSON(): PieceLocationJSON {\n\t\treturn {\n\t\t\tdirectories: this.directories,\n\t\t\tfull: this.full,\n\t\t\tname: this.name,\n\t\t\trelative: this.relative,\n\t\t\troot: this.root\n\t\t};\n\t}\n}\n\n/**\n * The return type of {@link PieceLocation.toJSON}.\n */\nexport interface PieceLocationJSON {\n\tdirectories: string[];\n\tfull: string;\n\tname: string;\n\trelative: string;\n\troot: string;\n}\n"]}