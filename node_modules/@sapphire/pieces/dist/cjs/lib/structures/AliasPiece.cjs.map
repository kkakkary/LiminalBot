{"version":3,"sources":["../../../../src/lib/structures/AliasPiece.ts"],"names":["Piece","AliasPiece"],"mappings":";;;;;;;;AAcO,IAAM,WAAA,GAAN,MAAM,WAAA,SAAiIA,eAG5I,CAAA;AAAA,EAMM,WAAY,CAAA,OAAA,EAA8C,OAA6B,GAAA,EAAI,EAAA;AACjG,IAAA,KAAA,CAAM,SAAS,OAAO,CAAA;AAHvB;AAAA;AAAA;AAAA,IAAO,aAAA,CAAA,IAAA,EAAA,SAAA,CAAA;AAIN,IAAK,IAAA,CAAA,OAAA,GAAU,OAAQ,CAAA,OAAA,IAAW,EAAC;AAAA;AACpC;AAAA;AAAA;AAAA,EAKgB,MAA0B,GAAA;AACzC,IAAO,OAAA;AAAA,MACN,GAAG,MAAM,MAAO,EAAA;AAAA,MAChB,OAAA,EAAS,IAAK,CAAA,OAAA,CAAQ,KAAM;AAAA,KAC7B;AAAA;AAEF,CAAA;AApBE,MAAA,CAAA,WAAA,EAAA,YAAA,CAAA;AAHWC,kBAAN,GAAA;AAAA,CAiCA,CAAUA,WAAV,KAAA;AACC,EAAM,CAAA,EAAE,QAAAA,EAAAA,WAAAA,CAAA,QAAa,EAAA,GAAAD,eAAA;AAAA,CADZ,EAAAC,kBAAA,KAAAA,kBAAA,GAAA,EAAA,CAAA,CAAA","file":"AliasPiece.cjs","sourcesContent":["import { Piece } from './Piece';\nimport type { StoreRegistryKey } from './StoreRegistry';\n\nexport interface AliasPieceOptions extends Piece.Options {\n\t/**\n\t * The aliases for the piece.\n\t * @default []\n\t */\n\treadonly aliases?: readonly string[];\n}\n\n/**\n * The piece to be stored in {@link AliasStore} instances.\n */\nexport class AliasPiece<Options extends AliasPieceOptions = AliasPieceOptions, StoreName extends StoreRegistryKey = StoreRegistryKey> extends Piece<\n\tOptions,\n\tStoreName\n> {\n\t/**\n\t * The aliases for the piece.\n\t */\n\tpublic aliases: readonly string[];\n\n\tpublic constructor(context: AliasPiece.LoaderContext<StoreName>, options: AliasPieceOptions = {}) {\n\t\tsuper(context, options);\n\t\tthis.aliases = options.aliases ?? [];\n\t}\n\n\t/**\n\t * Defines the `JSON.stringify` behavior of this alias piece.\n\t */\n\tpublic override toJSON(): AliasPiece.JSON {\n\t\treturn {\n\t\t\t...super.toJSON(),\n\t\t\taliases: this.aliases.slice()\n\t\t};\n\t}\n}\n\n/**\n * The return type of {@link AliasPiece.toJSON}.\n */\nexport interface AliasPieceJSON extends Piece.JSON {\n\taliases: string[];\n\toptions: AliasPieceOptions;\n}\n\nexport namespace AliasPiece {\n\texport const { Location } = Piece;\n\texport type Options = AliasPieceOptions;\n\t/** @deprecated Use {@linkcode LoaderContext} instead. */\n\texport type Context<StoreName extends StoreRegistryKey = StoreRegistryKey> = Piece.LoaderContext<StoreName>;\n\texport type LoaderContext<StoreName extends StoreRegistryKey = StoreRegistryKey> = Piece.LoaderContext<StoreName>;\n\texport type JSON = AliasPieceJSON;\n\texport type LocationJSON = Piece.LocationJSON;\n}\n"]}