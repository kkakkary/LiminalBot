import { __name, __publicField } from '../chunk-2JTKI4GS.mjs';
import * as Colorette from 'colorette';

var _LoggerStyle = class _LoggerStyle {
  constructor(resolvable = {}) {
    __publicField(this, "style");
    if (typeof resolvable === "function") {
      this.style = resolvable;
    } else {
      const styles = [];
      if (resolvable.effects) styles.push(...resolvable.effects.map((text) => Colorette[text]));
      if (resolvable.text) styles.push(Colorette[resolvable.text]);
      if (resolvable.background) styles.push(Colorette[resolvable.background]);
      this.style = styles.length ? styles.length === 1 ? styles[0] : (string) => styles.reduce((out, style) => style(out), string) : Colorette.reset;
    }
  }
  /**
   * Applies the style to a string.
   * @since 1.0.0
   * @param string The value to apply the style to.
   */
  run(string) {
    return this.style(string);
  }
};
__name(_LoggerStyle, "LoggerStyle");
var LoggerStyle = _LoggerStyle;
var LoggerStyleEffect = /* @__PURE__ */ ((LoggerStyleEffect2) => {
  LoggerStyleEffect2["Reset"] = "reset";
  LoggerStyleEffect2["Bold"] = "bold";
  LoggerStyleEffect2["Dim"] = "dim";
  LoggerStyleEffect2["Italic"] = "italic";
  LoggerStyleEffect2["Underline"] = "underline";
  LoggerStyleEffect2["Inverse"] = "inverse";
  LoggerStyleEffect2["Hidden"] = "hidden";
  LoggerStyleEffect2["Strikethrough"] = "strikethrough";
  return LoggerStyleEffect2;
})(LoggerStyleEffect || {});
var LoggerStyleText = /* @__PURE__ */ ((LoggerStyleText2) => {
  LoggerStyleText2["Black"] = "black";
  LoggerStyleText2["Red"] = "red";
  LoggerStyleText2["Green"] = "green";
  LoggerStyleText2["Yellow"] = "yellow";
  LoggerStyleText2["Blue"] = "blue";
  LoggerStyleText2["Magenta"] = "magenta";
  LoggerStyleText2["Cyan"] = "cyan";
  LoggerStyleText2["White"] = "white";
  LoggerStyleText2["Gray"] = "gray";
  LoggerStyleText2["BlackBright"] = "blackBright";
  LoggerStyleText2["RedBright"] = "redBright";
  LoggerStyleText2["GreenBright"] = "greenBright";
  LoggerStyleText2["YellowBright"] = "yellowBright";
  LoggerStyleText2["BlueBright"] = "blueBright";
  LoggerStyleText2["MagentaBright"] = "magentaBright";
  LoggerStyleText2["CyanBright"] = "cyanBright";
  LoggerStyleText2["WhiteBright"] = "whiteBright";
  return LoggerStyleText2;
})(LoggerStyleText || {});
var LoggerStyleBackground = /* @__PURE__ */ ((LoggerStyleBackground2) => {
  LoggerStyleBackground2["Black"] = "bgBlack";
  LoggerStyleBackground2["Red"] = "bgRed";
  LoggerStyleBackground2["Green"] = "bgGreen";
  LoggerStyleBackground2["Yellow"] = "bgYellow";
  LoggerStyleBackground2["Blue"] = "bgBlue";
  LoggerStyleBackground2["Magenta"] = "bgMagenta";
  LoggerStyleBackground2["Cyan"] = "bgCyan";
  LoggerStyleBackground2["White"] = "bgWhite";
  LoggerStyleBackground2["BlackBright"] = "bgBlackBright";
  LoggerStyleBackground2["RedBright"] = "bgRedBright";
  LoggerStyleBackground2["GreenBright"] = "bgGreenBright";
  LoggerStyleBackground2["YellowBright"] = "bgYellowBright";
  LoggerStyleBackground2["BlueBright"] = "bgBlueBright";
  LoggerStyleBackground2["MagentaBright"] = "bgMagentaBright";
  LoggerStyleBackground2["CyanBright"] = "bgCyanBright";
  LoggerStyleBackground2["WhiteBright"] = "bgWhiteBright";
  return LoggerStyleBackground2;
})(LoggerStyleBackground || {});

export { LoggerStyle, LoggerStyleBackground, LoggerStyleEffect, LoggerStyleText };
//# sourceMappingURL=LoggerStyle.mjs.map
//# sourceMappingURL=LoggerStyle.mjs.map