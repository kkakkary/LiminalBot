{"version":3,"sources":["../../src/register.ts"],"names":[],"mappings":";;;;AASO,IAAM,aAAA,GAAN,MAAM,aAAA,SAAqB,MAAO,CAAA;AAAA;AAAA;AAAA;AAAA,EAIxC,QAAe,yBAAyB,CAAA,CAAwB,OAA8B,EAAA;AAC7F,IAAA,OAAA,CAAQ,WAAW,EAAC;AACpB,IAAA,OAAA,CAAQ,MAAO,CAAA,QAAA,KAAa,IAAI,MAAA,CAAO,QAAQ,MAAM,CAAA;AAAA;AAEvD,CAAA;AARyC,MAAA,CAAA,aAAA,EAAA,cAAA,CAAA;AAAlC,IAAM,YAAN,GAAA;AAUP,cAAA,CAAe,OAAQ,CAAA,qCAAA,CAAsC,YAAa,CAAA,yBAAyB,GAAG,kCAAkC,CAAA","file":"register.mjs","sourcesContent":["import './index';\n\nimport { Plugin, preGenericsInitialization, SapphireClient } from '@sapphire/framework';\nimport type { ClientOptions } from 'discord.js';\nimport { Logger } from './index';\n\n/**\n * @since 1.0.0\n */\nexport class LoggerPlugin extends Plugin {\n\t/**\n\t * @since 1.0.0\n\t */\n\tpublic static [preGenericsInitialization](this: SapphireClient, options: ClientOptions): void {\n\t\toptions.logger ??= {};\n\t\toptions.logger.instance ??= new Logger(options.logger);\n\t}\n}\n\nSapphireClient.plugins.registerPreGenericsInitializationHook(LoggerPlugin[preGenericsInitialization], 'Logger-PreGenericsInitialization');\n"]}