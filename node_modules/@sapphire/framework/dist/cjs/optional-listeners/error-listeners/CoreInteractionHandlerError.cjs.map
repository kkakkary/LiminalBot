{"version":3,"sources":["../../../../src/optional-listeners/error-listeners/CoreInteractionHandlerError.ts"],"names":["Listener","Events"],"mappings":";;;;;;;AAGO,IAAM,aAAA,GAAN,MAAM,aAAA,SAAqBA,qBAAgD,CAAA;AAAA,EAC1E,YAAY,OAAiC,EAAA;AACnD,IAAA,KAAA,CAAM,OAAS,EAAA,EAAE,KAAO,EAAAC,iBAAA,CAAO,yBAAyB,CAAA;AAAA;AACzD,EAEO,GAAA,CAAI,OAAgB,OAAkC,EAAA;AAC5D,IAAA,MAAM,EAAE,IAAA,EAAM,QAAS,EAAA,GAAI,OAAQ,CAAA,OAAA;AACnC,IAAA,IAAA,CAAK,UAAU,MAAO,CAAA,KAAA;AAAA,MACrB,CAA+F,4FAAA,EAAA,IAAI,CAAc,WAAA,EAAA,QAAA,CAAS,IAAI,CAAA,CAAA,CAAA;AAAA,MAC9H;AAAA,KACD;AAAA;AAEF,CAAA;AAZkF,MAAA,CAAA,aAAA,EAAA,cAAA,CAAA;AAA3E,IAAM,YAAN,GAAA","file":"CoreInteractionHandlerError.cjs","sourcesContent":["import { Listener } from '../../lib/structures/Listener';\nimport { Events, type InteractionHandlerError } from '../../lib/types/Events';\n\nexport class CoreListener extends Listener<typeof Events.InteractionHandlerError> {\n\tpublic constructor(context: Listener.LoaderContext) {\n\t\tsuper(context, { event: Events.InteractionHandlerError });\n\t}\n\n\tpublic run(error: unknown, context: InteractionHandlerError) {\n\t\tconst { name, location } = context.handler;\n\t\tthis.container.logger.error(\n\t\t\t`Encountered error while handling an interaction handler run method for interaction-handler \"${name}\" at path \"${location.full}\"`,\n\t\t\terror\n\t\t);\n\t}\n}\n"]}