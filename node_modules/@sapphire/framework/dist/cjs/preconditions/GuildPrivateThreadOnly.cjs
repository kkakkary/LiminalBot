'use strict';

var pieces = require('@sapphire/pieces');
var discord_js = require('discord.js');
var Identifiers_cjs = require('../lib/errors/Identifiers.cjs');
var Precondition_cjs = require('../lib/structures/Precondition.cjs');

var __defProp = Object.defineProperty;
var __name = (target, value) => __defProp(target, "name", { value, configurable: true });
var _CorePrecondition = class _CorePrecondition extends Precondition_cjs.AllFlowsPrecondition {
  messageRun(message) {
    return message.thread?.type === discord_js.ChannelType.PrivateThread ? this.ok() : this.makeSharedError();
  }
  async chatInputRun(interaction) {
    const channel = await this.fetchChannelFromInteraction(interaction);
    return channel.type === discord_js.ChannelType.PrivateThread ? this.ok() : this.makeSharedError();
  }
  async contextMenuRun(interaction) {
    const channel = await this.fetchChannelFromInteraction(interaction);
    return channel.type === discord_js.ChannelType.PrivateThread ? this.ok() : this.makeSharedError();
  }
  makeSharedError() {
    return this.error({
      identifier: Identifiers_cjs.Identifiers.PreconditionGuildPrivateThreadOnly,
      message: "You can only run this command in private server thread channels."
    });
  }
};
__name(_CorePrecondition, "CorePrecondition");
var CorePrecondition = _CorePrecondition;
void pieces.container.stores.loadPiece({
  name: "GuildPrivateThreadOnly",
  piece: CorePrecondition,
  store: "preconditions"
});

exports.CorePrecondition = CorePrecondition;
//# sourceMappingURL=GuildPrivateThreadOnly.cjs.map
//# sourceMappingURL=GuildPrivateThreadOnly.cjs.map