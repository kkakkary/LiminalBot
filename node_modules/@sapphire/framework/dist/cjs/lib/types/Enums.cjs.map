{"version":3,"sources":["../../../../src/lib/types/Enums.ts"],"names":["CooldownLevel","PluginHook","BucketScope","RegisterBehavior","InternalRegistryAPIType","CommandOptionsRunTypeEnum","CommandPreConditions"],"mappings":"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","file":"Enums.cjs","sourcesContent":["export enum CooldownLevel {\n\tAuthor = 'author',\n\tChannel = 'channel',\n\tGuild = 'guild'\n}\n\nexport enum PluginHook {\n\tPreGenericsInitialization = 'preGenericsInitialization',\n\tPreInitialization = 'preInitialization',\n\tPostInitialization = 'postInitialization',\n\tPreLogin = 'preLogin',\n\tPostLogin = 'postLogin'\n}\n\n/**\n * The scope the cooldown applies to.\n */\nexport enum BucketScope {\n\t/**\n\t * Per channel cooldowns.\n\t */\n\tChannel,\n\t/**\n\t * Global cooldowns.\n\t */\n\tGlobal,\n\t/**\n\t * Per guild cooldowns.\n\t */\n\tGuild,\n\t/**\n\t * Per user cooldowns.\n\t */\n\tUser\n}\n\nexport enum RegisterBehavior {\n\tOverwrite = 'OVERWRITE',\n\tLogToConsole = 'LOG_TO_CONSOLE',\n\t/**\n\t * Finds all differences in the commands provided using our internal computation method, and logs them to the console, while applying them.\n\t *\n\t * @danger This can potentially cause slowdowns when booting up your bot as computing differences on big commands can take a while.\n\t * We recommend you use `OVERWRITE` instead in production.\n\t */\n\tVerboseOverwrite = 'VERBOSE_OVERWRITE',\n\t/**\n\t * Makes Sapphire handle all command registrations, removals, and updates for you.\n\t *\n\t * This mode can only be set as the **default** behavior, and cannot be set per-command.\n\t *\n\t * In this mode:\n\t * - any `idHints` set per-command are no longer respected, and can be omitted.\n\t * - any `behaviorWhenNotIdentical` that are set per-command are no longer respected, and can be omitted.\n\t * - any application commands that are *not* registered through Sapphire's {@link ApplicationCommandRegistry} are removed from the application.\n\t * \t- the same applies for guild commands, but only for guilds that are registered in the registry via `guildIds`.\n\t */\n\tBulkOverwrite = 'BULK_OVERWRITE'\n}\n\nexport enum InternalRegistryAPIType {\n\tChatInput,\n\tContextMenu\n}\n\n/**\n * The allowed values for {@link CommandOptions.runIn} as an enum.\n * @since 2.0.0\n */\nexport enum CommandOptionsRunTypeEnum {\n\tDm = 'DM',\n\tGuildText = 'GUILD_TEXT',\n\tGuildVoice = 'GUILD_VOICE',\n\tGuildNews = 'GUILD_NEWS',\n\tGuildNewsThread = 'GUILD_NEWS_THREAD',\n\tGuildPublicThread = 'GUILD_PUBLIC_THREAD',\n\tGuildPrivateThread = 'GUILD_PRIVATE_THREAD',\n\tGuildAny = 'GUILD_ANY'\n}\n\n/**\n * The available command pre-conditions.\n * @since 2.0.0\n */\nexport enum CommandPreConditions {\n\tCooldown = 'Cooldown',\n\t/** @deprecated Use {@link RunIn} instead. */\n\tDirectMessageOnly = 'DMOnly',\n\tRunIn = 'RunIn',\n\t/** @deprecated Use {@link RunIn} instead. */\n\tGuildNewsOnly = 'GuildNewsOnly',\n\t/** @deprecated Use {@link RunIn} instead. */\n\tGuildNewsThreadOnly = 'GuildNewsThreadOnly',\n\t/** @deprecated Use {@link RunIn} instead. */\n\tGuildOnly = 'GuildOnly',\n\t/** @deprecated Use {@link RunIn} instead. */\n\tGuildPrivateThreadOnly = 'GuildPrivateThreadOnly',\n\t/** @deprecated Use {@link RunIn} instead. */\n\tGuildPublicThreadOnly = 'GuildPublicThreadOnly',\n\t/** @deprecated Use {@link RunIn} instead. */\n\tGuildTextOnly = 'GuildTextOnly',\n\t/** @deprecated Use {@link RunIn} instead. */\n\tGuildVoiceOnly = 'GuildVoiceOnly',\n\t/** @deprecated Use {@link RunIn} instead. */\n\tGuildThreadOnly = 'GuildThreadOnly',\n\tNotSafeForWork = 'NSFW',\n\tClientPermissions = 'ClientPermissions',\n\tUserPermissions = 'UserPermissions'\n}\n"]}