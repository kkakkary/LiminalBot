{"version":3,"sources":["../../../../../src/lib/utils/application-commands/registriesErrors.ts"],"names":["container","Events","bulkOverwriteError"],"mappings":";;;;;;;;AAUO,SAAS,oBAAA,CAAqB,OAAgB,OAA4B,EAAA;AAChF,EAAM,MAAA,EAAE,IAAM,EAAA,QAAA,EAAa,GAAA,OAAA;AAC3B,EAAM,MAAA,EAAE,MAAQ,EAAA,MAAA,EAAW,GAAAA,gBAAA;AAE3B,EAAA,IAAI,MAAO,CAAA,aAAA,CAAcC,iBAAO,CAAA,sCAAsC,CAAG,EAAA;AACxE,IAAA,MAAA,CAAO,IAAK,CAAAA,iBAAA,CAAO,sCAAwC,EAAA,KAAA,EAAO,OAAO,CAAA;AAAA,GACnE,MAAA;AACN,IAAO,MAAA,CAAA,KAAA;AAAA,MACN,CAA0F,uFAAA,EAAA,IAAI,CAAc,WAAA,EAAA,QAAA,CAAS,IAAI,CAAA,CAAA,CAAA;AAAA,MACzH;AAAA,KACD;AAAA;AAEF;AAZgB,MAAA,CAAA,oBAAA,EAAA,sBAAA,CAAA;AAmBT,SAAS,sBAAA,CAAuB,OAAgB,OAAwB,EAAA;AAC9E,EAAM,MAAA,EAAE,QAAW,GAAAD,gBAAA;AAEnB,EAAA,IAAI,MAAO,CAAA,aAAA,CAAcC,iBAAO,CAAA,8CAA8C,CAAG,EAAA;AAChF,IAAA,MAAA,CAAO,IAAK,CAAAA,iBAAA,CAAO,8CAAgD,EAAA,KAAA,EAAO,OAAO,CAAA;AAAA,aACvE,OAAS,EAAA;AACnB,IAAmBC,oCAAA,CAAA,CAAA,yDAAA,EAA4D,OAAO,CAAA,CAAA,EAAI,KAAK,CAAA;AAAA,GACzF,MAAA;AACN,IAAAA,oCAAA,CAAmB,mDAAmD,KAAK,CAAA;AAAA;AAE7E;AAVgB,MAAA,CAAA,sBAAA,EAAA,wBAAA,CAAA","file":"registriesErrors.cjs","sourcesContent":["import { container } from '@sapphire/pieces';\nimport type { Command } from '../../structures/Command';\nimport { Events } from '../../types/Events';\nimport { bulkOverwriteError } from './registriesLog';\n\n/**\n * Opinionatedly logs the encountered registry error.\n * @param error The emitted error\n * @param command The command which had the error\n */\nexport function emitPerRegistryError(error: unknown, command: Command<any, any>) {\n\tconst { name, location } = command;\n\tconst { client, logger } = container;\n\n\tif (client.listenerCount(Events.CommandApplicationCommandRegistryError)) {\n\t\tclient.emit(Events.CommandApplicationCommandRegistryError, error, command);\n\t} else {\n\t\tlogger.error(\n\t\t\t`Encountered error while handling the command application command registry for command \"${name}\" at path \"${location.full}\"`,\n\t\t\terror\n\t\t);\n\t}\n}\n\n/**\n * Opinionatedly logs any bulk overwrite registries error.\n * @param error The emitted error\n * @param guildId The guild id in which the error was caused\n */\nexport function emitBulkOverwriteError(error: unknown, guildId: string | null) {\n\tconst { client } = container;\n\n\tif (client.listenerCount(Events.ApplicationCommandRegistriesBulkOverwriteError)) {\n\t\tclient.emit(Events.ApplicationCommandRegistriesBulkOverwriteError, error, guildId);\n\t} else if (guildId) {\n\t\tbulkOverwriteError(`Failed to overwrite guild application commands for guild ${guildId}`, error);\n\t} else {\n\t\tbulkOverwriteError(`Failed to overwrite global application commands`, error);\n\t}\n}\n"]}