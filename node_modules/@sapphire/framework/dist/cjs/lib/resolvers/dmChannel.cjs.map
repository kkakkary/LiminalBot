{"version":3,"sources":["../../../../src/lib/resolvers/dmChannel.ts"],"names":["result","resolveChannel","isDMChannel","Result","Identifiers"],"mappings":";;;;;;;;;AAMO,SAAS,gBAAA,CACf,WACA,oBAC2F,EAAA;AAC3F,EAAM,MAAAA,QAAA,GAASC,0BAAe,CAAA,SAAA,EAAW,oBAAoB,CAAA;AAC7D,EAAO,OAAAD,QAAA,CAAO,OAAQ,CAAA,CAAC,KAAU,KAAA;AAChC,IAAA,IAAIE,+BAAY,CAAA,KAAK,CAAK,IAAA,CAAC,MAAM,OAAS,EAAA;AACzC,MAAO,OAAAC,aAAA,CAAO,GAAG,KAAK,CAAA;AAAA;AAGvB,IAAO,OAAAA,aAAA,CAAO,GAAwC,CAAAC,2BAAA,CAAY,sBAAsB,CAAA;AAAA,GACxF,CAAA;AACF;AAZgB,MAAA,CAAA,gBAAA,EAAA,kBAAA,CAAA","file":"dmChannel.cjs","sourcesContent":["import { isDMChannel } from '@sapphire/discord.js-utilities';\nimport { Result } from '@sapphire/result';\nimport type { CommandInteraction, DMChannel, Message } from 'discord.js';\nimport { Identifiers } from '../errors/Identifiers';\nimport { resolveChannel } from './channel';\n\nexport function resolveDMChannel(\n\tparameter: string,\n\tmessageOrInteraction: Message | CommandInteraction\n): Result<DMChannel, Identifiers.ArgumentChannelError | Identifiers.ArgumentDMChannelError> {\n\tconst result = resolveChannel(parameter, messageOrInteraction);\n\treturn result.mapInto((value) => {\n\t\tif (isDMChannel(value) && !value.partial) {\n\t\t\treturn Result.ok(value);\n\t\t}\n\n\t\treturn Result.err<Identifiers.ArgumentDMChannelError>(Identifiers.ArgumentDMChannelError);\n\t});\n}\n"]}