{"version":3,"sources":["../../../src/arguments/CoreEnum.ts"],"names":["Argument","resolveEnum","container"],"mappings":";;;;;;;;AAKO,IAAM,aAAA,GAAN,MAAM,aAAA,SAAqBA,qBAAiB,CAAA;AAAA,EAC3C,YAAY,OAAiC,EAAA;AACnD,IAAA,KAAA,CAAM,OAAS,EAAA,EAAE,IAAM,EAAA,MAAA,EAAQ,CAAA;AAAA;AAChC,EAEO,GAAA,CAAI,WAAmB,OAAuD,EAAA;AACpF,IAAM,MAAA,QAAA,GAAWC,oBAAY,CAAA,SAAA,EAAW,EAAE,IAAA,EAAM,QAAQ,IAAM,EAAA,eAAA,EAAiB,OAAQ,CAAA,eAAA,EAAiB,CAAA;AACxG,IAAA,OAAO,QAAS,CAAA,UAAA;AAAA,MAAW,CAAC,UAC3B,KAAA,IAAA,CAAK,KAAM,CAAA;AAAA,QACV,SAAA;AAAA,QACA,UAAA;AAAA,QACA,SAAS,CAAuD,oDAAA,EAAA,OAAA,CAAQ,IAAM,EAAA,IAAA,CAAK,IAAI,CAAC,CAAA,CAAA;AAAA,QACxF;AAAA,OACA;AAAA,KACF;AAAA;AAEF,CAAA;AAhBmD,MAAA,CAAA,aAAA,EAAA,cAAA,CAAA;AAA5C,IAAM,YAAN,GAAA;AAkBP,KAAKC,gBAAA,CAAU,OAAO,SAAU,CAAA;AAAA,EAC/B,IAAM,EAAA,MAAA;AAAA,EACN,KAAO,EAAA,YAAA;AAAA,EACP,KAAO,EAAA;AACR,CAAC,CAAA","file":"CoreEnum.cjs","sourcesContent":["import { container } from '@sapphire/pieces';\nimport { resolveEnum } from '../lib/resolvers/enum';\nimport { Argument } from '../lib/structures/Argument';\nimport type { EnumArgumentContext } from '../lib/types/ArgumentContexts';\n\nexport class CoreArgument extends Argument<string> {\n\tpublic constructor(context: Argument.LoaderContext) {\n\t\tsuper(context, { name: 'enum' });\n\t}\n\n\tpublic run(parameter: string, context: EnumArgumentContext): Argument.Result<string> {\n\t\tconst resolved = resolveEnum(parameter, { enum: context.enum, caseInsensitive: context.caseInsensitive });\n\t\treturn resolved.mapErrInto((identifier) =>\n\t\t\tthis.error({\n\t\t\t\tparameter,\n\t\t\t\tidentifier,\n\t\t\t\tmessage: `The argument must have one of the following values: ${context.enum?.join(', ')}`,\n\t\t\t\tcontext\n\t\t\t})\n\t\t);\n\t}\n}\n\nvoid container.stores.loadPiece({\n\tname: 'enum',\n\tpiece: CoreArgument,\n\tstore: 'arguments'\n});\n"]}