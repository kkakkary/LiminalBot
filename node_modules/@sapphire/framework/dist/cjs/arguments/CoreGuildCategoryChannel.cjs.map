{"version":3,"sources":["../../../src/arguments/CoreGuildCategoryChannel.ts"],"names":["Argument","Identifiers","resolveGuildCategoryChannel","container"],"mappings":";;;;;;;;;AAMO,IAAM,aAAA,GAAN,MAAM,aAAA,SAAqBA,qBAA0B,CAAA;AAAA,EACpD,YAAY,OAAiC,EAAA;AACnD,IAAA,KAAA,CAAM,OAAS,EAAA,EAAE,IAAM,EAAA,sBAAA,EAAwB,CAAA;AAAA;AAChD,EAEO,GAAA,CAAI,WAAmB,OAA6D,EAAA;AAC1F,IAAM,MAAA,EAAE,KAAM,EAAA,GAAI,OAAQ,CAAA,OAAA;AAC1B,IAAA,IAAI,CAAC,KAAO,EAAA;AACX,MAAA,OAAO,KAAK,KAAM,CAAA;AAAA,QACjB,SAAA;AAAA,QACA,YAAYC,2BAAY,CAAA,qCAAA;AAAA,QACxB,OAAS,EAAA,4CAAA;AAAA,QACT;AAAA,OACA,CAAA;AAAA;AAGF,IAAM,MAAA,QAAA,GAAWC,oDAA4B,CAAA,SAAA,EAAW,KAAK,CAAA;AAC7D,IAAA,OAAO,QAAS,CAAA,UAAA;AAAA,MAAW,CAAC,UAC3B,KAAA,IAAA,CAAK,KAAM,CAAA;AAAA,QACV,SAAA;AAAA,QACA,UAAA;AAAA,QACA,OAAS,EAAA,kEAAA;AAAA,QACT,OAAS,EAAA,EAAE,GAAG,OAAA,EAAS,KAAM;AAAA,OAC7B;AAAA,KACF;AAAA;AAEF,CAAA;AA1B4D,MAAA,CAAA,aAAA,EAAA,cAAA,CAAA;AAArD,IAAM,YAAN,GAAA;AA4BP,KAAKC,gBAAA,CAAU,OAAO,SAAU,CAAA;AAAA,EAC/B,IAAM,EAAA,sBAAA;AAAA,EACN,KAAO,EAAA,YAAA;AAAA,EACP,KAAO,EAAA;AACR,CAAC,CAAA","file":"CoreGuildCategoryChannel.cjs","sourcesContent":["import { container } from '@sapphire/pieces';\nimport type { CategoryChannel } from 'discord.js';\nimport { Identifiers } from '../lib/errors/Identifiers';\nimport { resolveGuildCategoryChannel } from '../lib/resolvers/guildCategoryChannel';\nimport { Argument } from '../lib/structures/Argument';\n\nexport class CoreArgument extends Argument<CategoryChannel> {\n\tpublic constructor(context: Argument.LoaderContext) {\n\t\tsuper(context, { name: 'guildCategoryChannel' });\n\t}\n\n\tpublic run(parameter: string, context: Argument.Context): Argument.Result<CategoryChannel> {\n\t\tconst { guild } = context.message;\n\t\tif (!guild) {\n\t\t\treturn this.error({\n\t\t\t\tparameter,\n\t\t\t\tidentifier: Identifiers.ArgumentGuildChannelMissingGuildError,\n\t\t\t\tmessage: 'This command can only be used in a server.',\n\t\t\t\tcontext\n\t\t\t});\n\t\t}\n\n\t\tconst resolved = resolveGuildCategoryChannel(parameter, guild);\n\t\treturn resolved.mapErrInto((identifier) =>\n\t\t\tthis.error({\n\t\t\t\tparameter,\n\t\t\t\tidentifier,\n\t\t\t\tmessage: 'The argument did not resolve to a valid server category channel.',\n\t\t\t\tcontext: { ...context, guild }\n\t\t\t})\n\t\t);\n\t}\n}\n\nvoid container.stores.loadPiece({\n\tname: 'guildCategoryChannel',\n\tpiece: CoreArgument,\n\tstore: 'arguments'\n});\n"]}