{"version":3,"sources":["../../../src/arguments/CorePartialDMChannel.ts"],"names":["Argument","resolvePartialDMChannel","container"],"mappings":";;;;;;;;AAKO,IAAM,aAAA,GAAN,MAAM,aAAA,SAAqBA,qBAAuC,CAAA;AAAA,EACjE,YAAY,OAAiC,EAAA;AACnD,IAAA,KAAA,CAAM,OAAS,EAAA,EAAE,IAAM,EAAA,kBAAA,EAAoB,CAAA;AAAA;AAC5C,EAEO,GAAA,CAAI,WAAmB,OAA0E,EAAA;AACvG,IAAA,MAAM,QAAW,GAAAC,4CAAA,CAAwB,SAAW,EAAA,OAAA,CAAQ,OAAO,CAAA;AACnE,IAAA,OAAO,QAAS,CAAA,UAAA;AAAA,MAAW,CAAC,UAC3B,KAAA,IAAA,CAAK,KAAM,CAAA;AAAA,QACV,SAAA;AAAA,QACA,UAAA;AAAA,QACA,OAAS,EAAA,uDAAA;AAAA,QACT;AAAA,OACA;AAAA,KACF;AAAA;AAEF,CAAA;AAhByE,MAAA,CAAA,aAAA,EAAA,cAAA,CAAA;AAAlE,IAAM,YAAN,GAAA;AAkBP,KAAKC,gBAAA,CAAU,OAAO,SAAU,CAAA;AAAA,EAC/B,IAAM,EAAA,kBAAA;AAAA,EACN,KAAO,EAAA,YAAA;AAAA,EACP,KAAO,EAAA;AACR,CAAC,CAAA","file":"CorePartialDMChannel.cjs","sourcesContent":["import { container } from '@sapphire/pieces';\nimport type { DMChannel, PartialDMChannel } from 'discord.js';\nimport { resolvePartialDMChannel } from '../lib/resolvers/partialDMChannel';\nimport { Argument } from '../lib/structures/Argument';\n\nexport class CoreArgument extends Argument<DMChannel | PartialDMChannel> {\n\tpublic constructor(context: Argument.LoaderContext) {\n\t\tsuper(context, { name: 'partialDMChannel' });\n\t}\n\n\tpublic run(parameter: string, context: Argument.Context): Argument.Result<DMChannel | PartialDMChannel> {\n\t\tconst resolved = resolvePartialDMChannel(parameter, context.message);\n\t\treturn resolved.mapErrInto((identifier) =>\n\t\t\tthis.error({\n\t\t\t\tparameter,\n\t\t\t\tidentifier,\n\t\t\t\tmessage: 'The argument did not resolve to a Partial DM channel.',\n\t\t\t\tcontext\n\t\t\t})\n\t\t);\n\t}\n}\n\nvoid container.stores.loadPiece({\n\tname: 'partialDMChannel',\n\tpiece: CoreArgument,\n\tstore: 'arguments'\n});\n"]}