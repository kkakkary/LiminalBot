{"version":3,"sources":["../../../src/arguments/CoreGuildPublicThreadChannel.ts"],"names":[],"mappings":";;;;;;AAMO,IAAM,aAAA,GAAN,MAAM,aAAA,SAAqB,QAAwB,CAAA;AAAA,EAClD,YAAY,OAAiC,EAAA;AACnD,IAAA,KAAA,CAAM,OAAS,EAAA,EAAE,IAAM,EAAA,0BAAA,EAA4B,CAAA;AAAA;AACpD,EAEO,GAAA,CAAI,WAAmB,OAA2D,EAAA;AACxF,IAAM,MAAA,EAAE,KAAM,EAAA,GAAI,OAAQ,CAAA,OAAA;AAC1B,IAAA,IAAI,CAAC,KAAO,EAAA;AACX,MAAA,OAAO,KAAK,KAAM,CAAA;AAAA,QACjB,SAAA;AAAA,QACA,YAAY,WAAY,CAAA,qCAAA;AAAA,QACxB,OAAS,EAAA,4CAAA;AAAA,QACT;AAAA,OACA,CAAA;AAAA;AAGF,IAAM,MAAA,QAAA,GAAW,+BAAgC,CAAA,SAAA,EAAW,KAAK,CAAA;AACjE,IAAA,OAAO,QAAS,CAAA,UAAA;AAAA,MAAW,CAAC,UAC3B,KAAA,IAAA,CAAK,KAAM,CAAA;AAAA,QACV,SAAA;AAAA,QACA,UAAA;AAAA,QACA,OAAS,EAAA,8DAAA;AAAA,QACT,OAAS,EAAA,EAAE,GAAG,OAAA,EAAS,KAAM;AAAA,OAC7B;AAAA,KACF;AAAA;AAEF,CAAA;AA1B0D,MAAA,CAAA,aAAA,EAAA,cAAA,CAAA;AAAnD,IAAM,YAAN,GAAA;AA4BP,KAAK,SAAA,CAAU,OAAO,SAAU,CAAA;AAAA,EAC/B,IAAM,EAAA,0BAAA;AAAA,EACN,KAAO,EAAA,YAAA;AAAA,EACP,KAAO,EAAA;AACR,CAAC,CAAA","file":"CoreGuildPublicThreadChannel.mjs","sourcesContent":["import { container } from '@sapphire/pieces';\nimport type { ThreadChannel } from 'discord.js';\nimport { Identifiers } from '../lib/errors/Identifiers';\nimport { resolveGuildPublicThreadChannel } from '../lib/resolvers/guildPublicThreadChannel';\nimport { Argument } from '../lib/structures/Argument';\n\nexport class CoreArgument extends Argument<ThreadChannel> {\n\tpublic constructor(context: Argument.LoaderContext) {\n\t\tsuper(context, { name: 'guildPublicThreadChannel' });\n\t}\n\n\tpublic run(parameter: string, context: Argument.Context): Argument.Result<ThreadChannel> {\n\t\tconst { guild } = context.message;\n\t\tif (!guild) {\n\t\t\treturn this.error({\n\t\t\t\tparameter,\n\t\t\t\tidentifier: Identifiers.ArgumentGuildChannelMissingGuildError,\n\t\t\t\tmessage: 'This command can only be used in a server.',\n\t\t\t\tcontext\n\t\t\t});\n\t\t}\n\n\t\tconst resolved = resolveGuildPublicThreadChannel(parameter, guild);\n\t\treturn resolved.mapErrInto((identifier) =>\n\t\t\tthis.error({\n\t\t\t\tparameter,\n\t\t\t\tidentifier,\n\t\t\t\tmessage: 'The given argument did not resolve to a valid public thread.',\n\t\t\t\tcontext: { ...context, guild }\n\t\t\t})\n\t\t);\n\t}\n}\n\nvoid container.stores.loadPiece({\n\tname: 'guildPublicThreadChannel',\n\tpiece: CoreArgument,\n\tstore: 'arguments'\n});\n"]}