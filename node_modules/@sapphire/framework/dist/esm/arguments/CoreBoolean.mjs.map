{"version":3,"sources":["../../../src/arguments/CoreBoolean.ts"],"names":[],"mappings":";;;;;AAKO,IAAM,aAAA,GAAN,MAAM,aAAA,SAAqB,QAAkB,CAAA;AAAA,EAC5C,YAAY,OAAiC,EAAA;AACnD,IAAA,KAAA,CAAM,OAAS,EAAA,EAAE,IAAM,EAAA,SAAA,EAAW,CAAA;AAAA;AACnC,EAEO,GAAA,CAAI,WAAmB,OAA2D,EAAA;AACxF,IAAM,MAAA,QAAA,GAAW,cAAe,CAAA,SAAA,EAAW,EAAE,MAAA,EAAQ,QAAQ,MAAQ,EAAA,MAAA,EAAQ,OAAQ,CAAA,MAAA,EAAQ,CAAA;AAC7F,IAAA,OAAO,QAAS,CAAA,UAAA;AAAA,MAAW,CAAC,UAC3B,KAAA,IAAA,CAAK,KAAM,CAAA;AAAA,QACV,SAAA;AAAA,QACA,UAAA;AAAA,QACA,OAAS,EAAA,4CAAA;AAAA,QACT;AAAA,OACA;AAAA,KACF;AAAA;AAEF,CAAA;AAhBoD,MAAA,CAAA,aAAA,EAAA,cAAA,CAAA;AAA7C,IAAM,YAAN,GAAA;AAkBP,KAAK,SAAA,CAAU,OAAO,SAAU,CAAA;AAAA,EAC/B,IAAM,EAAA,SAAA;AAAA,EACN,KAAO,EAAA,YAAA;AAAA,EACP,KAAO,EAAA;AACR,CAAC,CAAA","file":"CoreBoolean.mjs","sourcesContent":["import { container } from '@sapphire/pieces';\nimport { resolveBoolean } from '../lib/resolvers/boolean';\nimport { Argument } from '../lib/structures/Argument';\nimport type { BooleanArgumentContext } from '../lib/types/ArgumentContexts';\n\nexport class CoreArgument extends Argument<boolean> {\n\tpublic constructor(context: Argument.LoaderContext) {\n\t\tsuper(context, { name: 'boolean' });\n\t}\n\n\tpublic run(parameter: string, context: BooleanArgumentContext): Argument.Result<boolean> {\n\t\tconst resolved = resolveBoolean(parameter, { truths: context.truths, falses: context.falses });\n\t\treturn resolved.mapErrInto((identifier) =>\n\t\t\tthis.error({\n\t\t\t\tparameter,\n\t\t\t\tidentifier,\n\t\t\t\tmessage: 'The argument did not resolve to a boolean.',\n\t\t\t\tcontext\n\t\t\t})\n\t\t);\n\t}\n}\n\nvoid container.stores.loadPiece({\n\tname: 'boolean',\n\tpiece: CoreArgument,\n\tstore: 'arguments'\n});\n"]}