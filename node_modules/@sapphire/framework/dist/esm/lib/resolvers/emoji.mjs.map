{"version":3,"sources":["../../../../src/lib/resolvers/emoji.ts"],"names":[],"mappings":";;;;;;AAKA,IAAM,eAAe,kBAAmB,EAAA;AAEjC,SAAS,aAAa,SAAqD,EAAA;AACjF,EAAA,MAAM,UAAU,YAAa,CAAA,IAAA,CAAK,SAAS,CAAA,GAAI,CAAC,CAAK,IAAA,IAAA;AAErD,EAAA,YAAA,CAAa,SAAY,GAAA,CAAA;AAEzB,EAAA,IAAI,OAAS,EAAA;AACZ,IAAA,OAAO,OAAO,EAAgB,CAAA;AAAA,MAC7B,IAAM,EAAA,OAAA;AAAA,MACN,EAAI,EAAA;AAAA,KACJ,CAAA;AAAA;AAGF,EAAM,MAAA,OAAA,GAAU,UAAW,CAAA,IAAA,CAAK,SAAS,CAAA;AAEzC,EAAA,IAAI,OAAS,EAAA;AACZ,IAAM,MAAA,QAAA,GAAW,WAAW,SAAS,CAAA;AAErC,IAAA,IAAI,QAAU,EAAA;AACb,MAAO,OAAA,MAAA,CAAO,GAAG,QAAQ,CAAA;AAAA;AAC1B;AAGD,EAAO,OAAA,MAAA,CAAO,GAAI,CAAA,WAAA,CAAY,kBAAkB,CAAA;AACjD;AAvBgB,MAAA,CAAA,YAAA,EAAA,cAAA,CAAA","file":"emoji.mjs","sourcesContent":["import { EmojiRegex, createTwemojiRegex } from '@sapphire/discord-utilities';\nimport { Result } from '@sapphire/result';\nimport { parseEmoji } from 'discord.js';\nimport { Identifiers } from '../errors/Identifiers';\n\nconst TwemojiRegex = createTwemojiRegex();\n\nexport function resolveEmoji(parameter: string): Result<EmojiObject, Identifiers> {\n\tconst twemoji = TwemojiRegex.exec(parameter)?.[0] ?? null;\n\n\tTwemojiRegex.lastIndex = 0;\n\n\tif (twemoji) {\n\t\treturn Result.ok<EmojiObject>({\n\t\t\tname: twemoji,\n\t\t\tid: null\n\t\t});\n\t}\n\n\tconst emojiId = EmojiRegex.test(parameter);\n\n\tif (emojiId) {\n\t\tconst resolved = parseEmoji(parameter) as EmojiObject | null;\n\n\t\tif (resolved) {\n\t\t\treturn Result.ok(resolved);\n\t\t}\n\t}\n\n\treturn Result.err(Identifiers.ArgumentEmojiError);\n}\n\nexport interface EmojiObject {\n\tname: string | null;\n\tid: string | null;\n\tanimated?: boolean;\n}\n"]}