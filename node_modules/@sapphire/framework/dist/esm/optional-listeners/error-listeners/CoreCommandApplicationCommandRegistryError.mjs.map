{"version":3,"sources":["../../../../src/optional-listeners/error-listeners/CoreCommandApplicationCommandRegistryError.ts"],"names":[],"mappings":";;;;AAIO,IAAM,aAAA,GAAN,MAAM,aAAA,SAAqB,QAA+D,CAAA;AAAA,EACzF,YAAY,OAAiC,EAAA;AACnD,IAAA,KAAA,CAAM,OAAS,EAAA,EAAE,KAAO,EAAA,MAAA,CAAO,wCAAwC,CAAA;AAAA;AACxE,EAEO,GAAA,CAAI,OAAgB,OAAkB,EAAA;AAC5C,IAAM,MAAA,EAAE,IAAM,EAAA,QAAA,EAAa,GAAA,OAAA;AAC3B,IAAA,IAAA,CAAK,UAAU,MAAO,CAAA,KAAA;AAAA,MACrB,CAA0F,uFAAA,EAAA,IAAI,CAAc,WAAA,EAAA,QAAA,CAAS,IAAI,CAAA,CAAA,CAAA;AAAA,MACzH;AAAA,KACD;AAAA;AAEF,CAAA;AAZiG,MAAA,CAAA,aAAA,EAAA,cAAA,CAAA;AAA1F,IAAM,YAAN,GAAA","file":"CoreCommandApplicationCommandRegistryError.mjs","sourcesContent":["import type { Command } from '../../lib/structures/Command';\nimport { Listener } from '../../lib/structures/Listener';\nimport { Events } from '../../lib/types/Events';\n\nexport class CoreListener extends Listener<typeof Events.CommandApplicationCommandRegistryError> {\n\tpublic constructor(context: Listener.LoaderContext) {\n\t\tsuper(context, { event: Events.CommandApplicationCommandRegistryError });\n\t}\n\n\tpublic run(error: unknown, command: Command) {\n\t\tconst { name, location } = command;\n\t\tthis.container.logger.error(\n\t\t\t`Encountered error while handling the command application command registry for command \"${name}\" at path \"${location.full}\"`,\n\t\t\terror\n\t\t);\n\t}\n}\n"]}